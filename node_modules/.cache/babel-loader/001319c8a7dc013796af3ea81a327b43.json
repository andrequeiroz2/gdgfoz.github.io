{"remainingRequest":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/babel-loader/lib/index.js!/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/eslint-loader/index.js??ref--13-0!/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/src/registerServiceWorker.js","dependencies":[{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/src/registerServiceWorker.js","mtime":1583343428653},{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/* eslint-disable no-console */\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(\"\".concat(process.env.BASE_URL, \"service-worker.js\"), {\n    ready: function ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n    },\n    registered: function registered(registration) {\n      console.log('Service worker has been registered.');\n      setInterval(function () {\n        registration.update();\n      }, 1000 * 60 * 60); // hourly checks\n    },\n    cached: function cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound: function updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated: function updated(registration) {\n      console.log('New content is available; please refresh.');\n      document.dispatchEvent(new CustomEvent('swUpdated', {\n        detail: registration\n      }));\n    },\n    offline: function offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error: function error(_error) {\n      console.error('Error during service worker registration:', _error);\n    }\n  });\n}",{"version":3,"sources":["/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/src/registerServiceWorker.js"],"names":["register","process","env","NODE_ENV","BASE_URL","ready","console","log","registered","registration","setInterval","update","cached","updatefound","updated","document","dispatchEvent","CustomEvent","detail","offline","error"],"mappings":"AAAA;AAEA,SAASA,QAAT,QAAyB,yBAAzB;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,WAAIC,OAAO,CAACC,GAAR,CAAYE,QAAhB,wBAA6C;AACnDC,IAAAA,KADmD,mBAC1C;AACPC,MAAAA,OAAO,CAACC,GAAR,CACE,0DACA,+CAFF;AAID,KANkD;AAOnDC,IAAAA,UAPmD,sBAOvCC,YAPuC,EAOzB;AACxBH,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AAEAG,MAAAA,WAAW,CAAC,YAAM;AAChBD,QAAAA,YAAY,CAACE,MAAb;AACD,OAFU,EAER,OAAO,EAAP,GAAY,EAFJ,CAAX,CAHwB,CAKJ;AACrB,KAbkD;AAcnDC,IAAAA,MAdmD,oBAczC;AACRN,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD,KAhBkD;AAiBnDM,IAAAA,WAjBmD,yBAiBpC;AACbP,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAnBkD;AAoBnDO,IAAAA,OApBmD,mBAoB1CL,YApB0C,EAoB5B;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAQ,MAAAA,QAAQ,CAACC,aAAT,CACE,IAAIC,WAAJ,CAAgB,WAAhB,EAA6B;AAAEC,QAAAA,MAAM,EAAET;AAAV,OAA7B,CADF;AAGD,KAzBkD;AA0BnDU,IAAAA,OA1BmD,qBA0BxC;AACTb,MAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACD,KA5BkD;AA6BnDa,IAAAA,KA7BmD,iBA6B5CA,MA7B4C,EA6BrC;AACZd,MAAAA,OAAO,CAACc,KAAR,CAAc,2CAAd,EAA2DA,MAA3D;AACD;AA/BkD,GAA7C,CAAR;AAiCD","sourcesContent":["/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered (registration) {\n      console.log('Service worker has been registered.')\n      \n      setInterval(() => {\n        registration.update();\n      }, 1000 * 60 * 60); // hourly checks\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated (registration) {\n      console.log('New content is available; please refresh.')\n      document.dispatchEvent(\n        new CustomEvent('swUpdated', { detail: registration })\n      );\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n"]}]}