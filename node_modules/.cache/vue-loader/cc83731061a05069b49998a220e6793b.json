{"remainingRequest":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/src/App.vue","mtime":1583343428653},{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hussan/dev/htdocs/gdgfoz/gdgfoz.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CoreDrawer from '@/components/common/Drawer'\nimport CoreToolbar from '@/components/common/Toolbar'\nimport CoreFooter from '@/components/common/Footer'\nimport CoreView from '@/components/common/View'\nimport BottomNav from '@/components/common/BottomNav'\n\nexport default {\n  name: 'App',\n  components: {\n    CoreDrawer,\n    CoreToolbar,\n    CoreFooter,\n    CoreView,\n    BottomNav\n  },\n  data () {\n    return {\n      refreshing: false,\n      registration: null,\n      snackBtnText: '',\n      snackWithBtnText: '',\n      snackWithButtons: false,\n      timeout: 6000,\n      //\n    }\n  },\n  created() {\n    // Listen for swUpdated event and display refresh snackbar as required.\n    document.addEventListener('swUpdated', this.showRefreshUI, { once: true });\n    // Refresh all open app tabs when a new service worker is installed.\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\n      if (this.refreshing) return;\n        this.refreshing = true;\n      window.location.reload();\n    });\n  },\n  methods:{\n    showRefreshUI(e) {\n      this.registration = e.detail;\n      this.snackBtnText = 'Refresh';\n      this.snackWithBtnText = 'New version available!';\n      this.snackWithButtons = true;\n    },\n    refreshApp() {\n      this.snackWithButtons = false;\n      if (!this.registration || !this.registration.waiting) { return; }\n      this.registration.waiting.postMessage('skipWaiting');\n    },\n  }\n  \n\n  \n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app class=\"white\">\n\n    <v-snackbar\n        v-model=\"snackWithButtons\"\n        :timeout=\"timeout\"\n        bottom\n        left\n        class=\"snack\"\n      >\n        {{ snackWithBtnText }}\n        <v-spacer />\n        <v-btn\n          dark\n          flat\n          color=\"#00f500\"\n          @click.native=\"refreshApp\"\n        >\n          {{ snackBtnText }}\n        </v-btn>\n        <v-btn\n          icon\n          @click=\"snackWithButtons = false\"\n        >\n          <v-icon>close</v-icon>\n        </v-btn>\n    </v-snackbar>\n\n\n    <CoreToolbar/>\n    <CoreDrawer/>\n    <CoreView/>\n    \n    <CoreFooter/>\n    <BottomNav/>\n  </v-app>\n</template>\n\n<script>\nimport CoreDrawer from '@/components/common/Drawer'\nimport CoreToolbar from '@/components/common/Toolbar'\nimport CoreFooter from '@/components/common/Footer'\nimport CoreView from '@/components/common/View'\nimport BottomNav from '@/components/common/BottomNav'\n\nexport default {\n  name: 'App',\n  components: {\n    CoreDrawer,\n    CoreToolbar,\n    CoreFooter,\n    CoreView,\n    BottomNav\n  },\n  data () {\n    return {\n      refreshing: false,\n      registration: null,\n      snackBtnText: '',\n      snackWithBtnText: '',\n      snackWithButtons: false,\n      timeout: 6000,\n      //\n    }\n  },\n  created() {\n    // Listen for swUpdated event and display refresh snackbar as required.\n    document.addEventListener('swUpdated', this.showRefreshUI, { once: true });\n    // Refresh all open app tabs when a new service worker is installed.\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\n      if (this.refreshing) return;\n        this.refreshing = true;\n      window.location.reload();\n    });\n  },\n  methods:{\n    showRefreshUI(e) {\n      this.registration = e.detail;\n      this.snackBtnText = 'Refresh';\n      this.snackWithBtnText = 'New version available!';\n      this.snackWithButtons = true;\n    },\n    refreshApp() {\n      this.snackWithButtons = false;\n      if (!this.registration || !this.registration.waiting) { return; }\n      this.registration.waiting.postMessage('skipWaiting');\n    },\n  }\n  \n\n  \n}\n</script>\n\n<style scoped>\n/* Provide better right-edge spacing when using an icon button there. */\n.snack >>> .v-snack__content {\n  padding-right: 16px;\n}\n</style>\n"]}]}